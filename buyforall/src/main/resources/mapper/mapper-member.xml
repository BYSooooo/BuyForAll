<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="Member">
    <!-- 회원 가입 중 이메일 중복 ajax-->
    <select id="checkEmail" parameterType="string" resultType="int">
        SELECT COUNT(*)
        FROM Member
        WHERE MemberEmail = #{MemberEmail}
    </select>

    <!-- 회원 가입 중 아이디 중복 ajax-->
    <select id="checkId" parameterType="string" resultType="int">
        SELECT COUNT(*)
        FROM Member
        WHERE memberId = #{MemberId}
    </select>

    
    <!-- 회원 가입 -->
    <insert id="insertMember" parameterType="hashMap">
        INSERT INTO Member( memberId, memberPwd, memberName, memberEmail, memberGrade, postNumber, memberAddress, memberAddress2, joinDate )
        VALUES( #{memberId}, #{password}, #{memberName}, #{memberEmail}, #{memberGrade}, #{postNumber}, #{memberAddress}, #{memberAddress2}, #{joinDate} )
    </insert>

    <!-- 로그인 중 회원 정보를 Vo 객체에 담기 위한 ResultMap -->
    <resultMap id="memberVoResult" type="MemberVo">
        <id property="memberId" javaType="string" jdbcType="VARCHAR" column="memberId" />
        <id property="password" javaType="string" jdbcType="VARCHAR" column="memberPwd" />
        <id property="memberName" javaType="string" jdbcType="VARCHAR" column="memberName" />
        <id property="memberEmail" javaType="string" jdbcType="VARCHAR" column="memberEmail" />
        <id property="memberGrade" javaType="string" jdbcType="VARCHAR" column="memberGrade" />
        <id property="postNumber" javaType="string" jdbcType="VARCHAR" column="postNumber" />
        <id property="memberAddress" javaType="string" jdbcType="VARCHAR" column="memberAddress" />
        <id property="memberAddress2" javaType="string" jdbcType="VARCHAR" column="memberAddress2" />
        <id property="lastLogin" javaType="string" jdbcType="VARCHAR" column="lastLogin" />
        <id property="amountBuyingPrice" javaType="int" jdbcType="INTEGER" column="amountBuying" />
        <id property="joinDate" javaType="string" jdbcType="VARCHAR" column="joinDate" />
    </resultMap>

    <!-- 로그인 중 아이디로 나머지 정보를 반환-->
    <select id="getMemberInfoById" parameterType="string" resultType="MemberVo" resultMap="memberVoResult">
        SELECT memberId, memberPwd, memberName, memberEmail, memberGrade, postNumber, memberAddress, memberAddress2, lastLogin, amountBuying, joinDate
        FROM Member
        WHERE memberId = #{memberId}
    </select>

    <!-- 로그인 중 최종 로그인 일자를 변경 -->
    <update id="insertLastLogin" parameterType="hashMap">
        UPDATE Member
        SET lastLogin = #{lastLogin}
        WHERE memberId = #{memberId}
    </update>

    <!-- 이메일 값으로 아이디 찾아서 반환 -->
    <select id="getIdByEmail" parameterType="string" resultType="string">
        SELECT memberId
        FROM Member
        WHERE memberEmail = #{memberEmail}
    </select>

    <!-- 회원이름, 이메일이 일치하는 회원이 있는지 확인 -->
    <select id="getResultForPwd" parameterType="hashMap" resultType="int">
        SELECT COUNT(*)
        FROM Member
        WHERE memberId = #{memberId} AND memberEmail = #{memberEmail}
    </select>
    <!-- 임시 비밀번호로 업데이트 -->
    <update id="updateTempPwd" parameterType="hashMap">
        UPDATE Member
        SET memberPwd = #{memberPwd}
        WHERE memberEmail = #{memberEmail}
    </update>
    <!-- 회원정보 수정 -->
    <update id="updateMember" parameterType="hashMap">
        UPDATE Member
        SET memberPwd = #{password}, memberEmail = #{memberEmail}, memberName=#{memberName}, postNumber = #{postNumber}, memberAddress=#{memberAddress}, memberAddress2=#{memberAddress2}
        WHERE memberId = #{memberId}
    </update>



</mapper>